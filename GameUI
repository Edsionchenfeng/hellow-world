import { ui } from "./../ui/layaMaxUI";
import CameraMoveScript from "./CameraMoveScript";
import SceneScript from "./SceneScript";
/**
 * 本示例采用非脚本的方式实现，而使用继承页面基类，实现页面逻辑。在IDE里面设置场景的Runtime属性即可和场景进行关联
 * 相比脚本方式，继承式页面类，可以直接使用页面定义的属性（通过IDE内var属性定义），比如this.tipLbll，this.scoreLbl，具有代码提示效果
 * 建议：如果是页面级的逻辑，需要频繁访问页面内多个元素，使用继承式写法，如果是独立小模块，功能单一，建议用脚本方式实现，比如子弹脚本。
 */
export default class GameUI extends ui.test.TestSceneUI {
    public m_scene:Laya.Scene3D;
    private m_camera:Laya.Camera;
    private ray:Laya.Ray;
    private hitresult:Laya.HitResult = new Laya.HitResult();
    private point:Laya.Vector2 = new Laya.Vector2();
    //_myscene :Laya.Scene3D;
    
    constructor() {
        super();
         //初始化引擎
         Laya3D.init(0, 0);
         //适配模式
        Laya.stage.scaleMode = Laya.Stage.SCALE_FULL;
        Laya.stage.screenMode = Laya.Stage.SCREEN_NONE;

        this.m_scene = new Laya.Scene3D();
        Laya.stage.addChild(this.m_scene);
		
        this.Init();
       

        //Laya.Scene3D.load('res/LayaScene_Cube/Conventional/Cube.ls',Laya.Handler.create(this,this.onComplete));
        
    }
//     private onComplete(scene:Laya.Scene3D):void{

//  var camera =scene.getChildByName("Camera") as Laya.Camera ;
//  camera.addComponent(CameraMoveScript);


       

//         // 将场景加到舞台上
//         Laya.stage.addChild(scene);
//     }

    Init(){
        
       

       Laya.Sprite3D.load("res/LayaScene_PUMCHW-D03-F001/Conventional/PUMCHW-D03-F001.lh",Laya.Handler.create(this,function(s:Laya.Sprite3D){
        var layaMonkey2 = this.m_scene.addChild(s);
         //添加照相机
        // var camera = (scene.addChild(new Laya.Camera())) as Laya.Camera;
        // camera.transform.translate(new Laya.Vector3(0, 0, 0));
        // camera.transform.rotate(new Laya.Vector3(0, 0, 0), true, false);
        // camera.addComponent(CameraMoveScript);
        // camera.clearFlag = Laya.BaseCamera.CLEARFLAG_SOLIDCOLOR;    
        //  //设置背景颜色
        // camera.clearColor = new Laya.Vector4(1,1,1,1);
         //添加照相机
      this.m_camera = new Laya.Camera();
      this.m_scene.addChild(this.m_camera);
      this.m_camera.transform.translate(new Laya.Vector3(0, 3, 3));
      this.m_camera.transform.rotate(new Laya.Vector3(-30, 0, 0), true, false);
      this.m_camera.clearColor = new Laya.Vector4(1,1,1,1);
      this.m_camera.addComponent(CameraMoveScript);
 
         //添加方向光
         var directionLight: Laya.DirectionLight = this.m_scene.addChild(new Laya.DirectionLight()) as Laya.DirectionLight;
         directionLight.color = new Laya.Vector3(0.3, 0.3, 0.3);
         directionLight.transform.worldMatrix.setForward(new Laya.Vector3(1, -1, 0));
       //  scene.ambientColor = new Laya.Vector3(1, 1, 1);
 
      //    //添加自定义模型
          var box: Laya.MeshSprite3D = this.m_scene.addChild(new Laya.MeshSprite3D(Laya.PrimitiveMesh.createBox(1, 1, 1))) as Laya.MeshSprite3D;
      //    box.transform.rotate(new Laya.Vector3(0, 45, 0), false, false);
     
      box.transform.rotate(new Laya.Vector3(0,45,0),false,false);
      box.transform.translate(new Laya.Vector3(3,2,2));

           //给模型添加碰撞器前需要先给模型添加碰撞组件
    var boxCollider:Laya.PhysicsCollider =  box.addComponent(Laya.PhysicsCollider)as Laya.PhysicsCollider;
    var boxShape:Laya.BoxColliderShape = new Laya.BoxColliderShape(1,1,1);
    boxCollider.colliderShape = boxShape;
    //创建物理刚体组件
  //  var rigidBody:Laya.Rigidbody3D = box.addComponent(Laya.Rigidbody3D) as Laya.Rigidbody3D;
    //刚体质量
   // rigidBody.mass = 10;
    //刚体的摩擦力
  //  rigidBody.friction = 0.4;
    //刚体的弹力
  //  rigidBody.restitution = 0.2;
    //刚体碰撞器的形状
   // rigidBody.colliderShape = boxShape;
    box.addComponent(SceneScript);
         var material: Laya.BlinnPhongMaterial = new Laya.BlinnPhongMaterial();
         material.albedoColor=new Laya.Vector4(1,0,1,0.01);
        // material.renderMode = Laya.PBRStandardMaterial.RENDERMODE_TRANSPARENT;
      //    material.alphaTest=true;
      //    material.alphaTestValue=0.1;
      //    material.renderMode=Laya.BlinnPhongMaterial.RENDERMODE_TRANSPARENT;
      //    material.albedoColor.w=0.5;
     
      
      //    Laya.Texture2D.load("res/layabox.png", Laya.Handler.create(null, function(tex:Laya.Texture2D) {
      //            material.albedoTexture = tex;
      //    }));
         box.meshRenderer.material = material;
       }));
           //添加3D场景
          // var scene: Laya.Scene3D = Laya.stage.addChild(new Laya.Scene3D()) as Laya.Scene3D;
           Laya.Stat.show(0,0);
       

        //    scene = new Laya.Scene3D();
        //    Laya.stage.addChild(scene)

        // this.ddd.visible = false;

          
            //射线初始化（必须初始化）
    this.ray = new Laya.Ray(new Laya.Vector3(0,0,0),new Laya.Vector3(0,0,0));
    //鼠标事件监听
    Laya.stage.on(Laya.Event.MOUSE_MOVE,this,this.onMouseMove);

        
        //    Laya.Sprite3D.load("res/LayaScene_BDHCMU-A02-F003-notag/Conventional/BDHCMU-A02-F003-notag.lh", Laya.Handler.create(this, function(sp){
        //     var layaMonkey2 = scene.addChild(sp);
           
        // }));
        
         
    }
    private onMouseMove():void{
        //获取鼠标位置
        this.point.x = Laya.MouseManager.instance.mouseX;
        this.point.y = Laya.MouseManager.instance.mouseY;
        //产生射线
        this.m_camera.viewportPointToRay(this.point,this.ray);
        //拿到射线碰撞的物体
        this.m_scene.physicsSimulation.rayCast(this.ray,this.hitresult);
        //如果碰撞到物体
        if (this.hitresult.succeeded)
        {
          //删除碰撞到的物体
         // this.hitresult.collider.owner.removeSelf();
       var floor= this.hitresult.collider.owner as Laya.MeshSprite3D ;
       var material: Laya.BlinnPhongMaterial = new Laya.BlinnPhongMaterial();
       material.albedoColor=new Laya.Vector4(1,0,0,0.01);
       floor.meshRenderer.material=material;
          console.log("碰撞到物体！！")
        }
        
      }


}
